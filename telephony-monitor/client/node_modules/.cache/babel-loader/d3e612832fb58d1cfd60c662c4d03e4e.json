{"ast":null,"code":"var _jsxFileName = \"/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/GlobalHistoryView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { historyApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalHistoryView.css';\nconst GlobalHistoryView = () => {\n  const [historyData, setHistoryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [showOngoingOnly, setShowOngoingOnly] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('country'); // 'country' or 'phone'\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Added new filters\n  const [countryFilter, setCountryFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n\n  // Filter settings\n  const [timeRange, setTimeRange] = useState('5d');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [showCustomDates, setShowCustomDates] = useState(false);\n  useEffect(() => {\n    fetchHistoryData();\n  }, [timeRange, viewMode]);\n\n  // Apply filters when filter states change or historyData updates\n  useEffect(() => {\n    // First filter out the \"green\" (online) events as we're only interested in issues\n    let filtered = historyData.filter(item => item.status !== 'green');\n\n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n\n    // Apply search filter if in phone mode\n    if (viewMode === 'phone' && searchTerm) {\n      const term = searchTerm.toLowerCase();\n      filtered = filtered.filter(item => item.number && item.number.toLowerCase().includes(term));\n    }\n\n    // Apply country filter if selected\n    if (countryFilter) {\n      const search = countryFilter.toLowerCase();\n      filtered = filtered.filter(item => item.country && item.country.toLowerCase().includes(search));\n    }\n\n    // Apply type filter if selected\n    if (typeFilter) {\n      filtered = filtered.filter(item => item.type === typeFilter);\n    }\n\n    // Apply ongoing filter if active\n    if (showOngoingOnly) {\n      filtered = filtered.filter(item => item.status_end === null);\n    }\n    setFilteredData(filtered);\n  }, [activeFilter, showOngoingOnly, historyData, viewMode, searchTerm, countryFilter, typeFilter]);\n  const fetchHistoryData = async () => {\n    try {\n      setLoading(true);\n      let params = {\n        timeRange\n      };\n      if (timeRange === 'custom' && startDate && endDate) {\n        params.startDate = startDate;\n        params.endDate = endDate;\n      }\n      let response;\n      if (viewMode === 'country') {\n        response = await historyApi.getStatusHistory(params.timeRange, params.startDate, params.endDate);\n      } else {\n        response = await historyApi.getPhoneHistory(params.timeRange, params.startDate, params.endDate, searchTerm || null);\n      }\n      setHistoryData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n\n      // Log data for debugging\n      console.log('Fetched history data:', response.data);\n      console.log('Yellow items count:', response.data.filter(item => item.status === 'yellow').length);\n    } catch (err) {\n      setError('Failed to fetch history data. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching history data:', err);\n    }\n  };\n  const handleFilterClick = status => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n  const handleOngoingFilterClick = () => {\n    setShowOngoingOnly(!showOngoingOnly);\n    // Don't reset status filter\n  };\n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setShowOngoingOnly(false);\n    setSearchTerm('');\n    setCountryFilter('');\n    setTypeFilter('');\n  };\n\n  // Get unique countries for filter dropdown\n  const getUniqueCountries = () => {\n    if (!historyData.length) return [];\n    const countries = new Set();\n    historyData.forEach(item => {\n      if (item.country) countries.add(item.country);\n    });\n    return Array.from(countries).sort();\n  };\n\n  // Get unique types for filter dropdown\n  const getUniqueTypes = () => {\n    if (!historyData.length) return [];\n    const types = new Set();\n    historyData.forEach(item => {\n      if (item.type) types.add(item.type);\n    });\n    return Array.from(types).sort();\n  };\n\n  // Get counts by status for issues only\n  const getStatusCounts = () => {\n    const counts = {\n      yellow: 0,\n      red: 0,\n      ongoing: 0,\n      total: 0\n    };\n    historyData.forEach(item => {\n      if (item.status === 'yellow' || item.status === 'red') {\n        counts[item.status] = (counts[item.status] || 0) + 1;\n        counts.total++;\n\n        // Count ongoing issues\n        if (item.status_end === null) {\n          counts.ongoing++;\n        }\n      }\n    });\n    return counts;\n  };\n\n  // Format date to readable format\n  const formatDate = dateString => {\n    if (!dateString) return 'Present';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Calculate duration between start and end times\n  const calculateDuration = (startDate, endDate) => {\n    if (!endDate) return 'Ongoing';\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const durationMs = end - start;\n\n    // Less than a minute\n    if (durationMs < 60000) {\n      return `${Math.floor(durationMs / 1000)} seconds`;\n    }\n    // Less than an hour\n    if (durationMs < 3600000) {\n      return `${Math.floor(durationMs / 60000)} minutes`;\n    }\n    // Less than a day\n    if (durationMs < 86400000) {\n      return `${Math.floor(durationMs / 3600000)} hours`;\n    }\n    // More than a day\n    return `${Math.floor(durationMs / 86400000)} days`;\n  };\n  const handleTimeRangeChange = e => {\n    const newRange = e.target.value;\n    setTimeRange(newRange);\n    setShowCustomDates(newRange === 'custom');\n  };\n  const handleCustomDateSubmit = e => {\n    e.preventDefault();\n    fetchHistoryData();\n  };\n\n  // Group history data by country or phone number\n  const groupData = (data = filteredData) => {\n    const grouped = {};\n    if (viewMode === 'country') {\n      data.forEach(item => {\n        if (!grouped[item.country]) {\n          grouped[item.country] = [];\n        }\n        grouped[item.country].push(item);\n      });\n    } else {\n      data.forEach(item => {\n        if (!grouped[item.number]) {\n          grouped[item.number] = [];\n        }\n        grouped[item.number].push(item);\n      });\n    }\n    return grouped;\n  };\n\n  // Add a title that shows the current filter status\n  const getFilterTitle = () => {\n    let title = \"\";\n    if (activeFilter) {\n      title += `${activeFilter === 'yellow' ? 'Degraded' : 'Offline'} `;\n    } else {\n      title += \"All \";\n    }\n    title += \"Issues\";\n    if (showOngoingOnly) {\n      title += \" (Ongoing Only)\";\n    }\n    if (countryFilter) {\n      title += ` in ${countryFilter}`;\n    }\n    if (typeFilter) {\n      title += ` of type ${typeFilter}`;\n    }\n    return title;\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n    // Reset filters when changing view mode\n    setActiveFilter(null);\n    setShowOngoingOnly(false);\n    setSearchTerm('');\n    setCountryFilter('');\n    setTypeFilter('');\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 12\n      }\n    }, \"Loading history data...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 12\n      }\n    }, error);\n  }\n  const groupedData = groupData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, \"Global Status History\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view-mode-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `toggle-btn ${viewMode === 'country' ? 'active' : ''}`,\n    onClick: () => handleViewModeChange('country'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, \"View by Country\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `toggle-btn ${viewMode === 'phone' ? 'active' : ''}`,\n    onClick: () => handleViewModeChange('phone'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, \"View by Phone Number\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-range-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"timeRange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, \"Time Range:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"timeRange\",\n    value: timeRange,\n    onChange: handleTimeRangeChange,\n    className: \"time-range-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"24h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"Last 24 Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"48h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, \"Last 48 Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, \"Last 5 Days\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Custom Range\"))), showCustomDates && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCustomDateSubmit,\n    className: \"custom-date-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, \"Start Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    id: \"startDate\",\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"endDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, \"End Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    id: \"endDate\",\n    value: endDate,\n    onChange: e => setEndDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"apply-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, \"Apply\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"advanced-filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countryFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, \"Country:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"countryFilter\",\n    placeholder: \"Search for a country...\",\n    value: countryFilter,\n    onChange: e => setCountryFilter(e.target.value),\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }), countryFilter && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-search-btn\",\n    onClick: () => setCountryFilter(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"typeFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"typeFilter\",\n    value: typeFilter,\n    onChange: e => setTypeFilter(e.target.value),\n    className: \"filter-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }, \"All Types\"), getUniqueTypes().map(type => /*#__PURE__*/React.createElement(\"option\", {\n    key: type,\n    value: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, type))))), viewMode === 'phone' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search phone numbers...\",\n    value: searchTerm,\n    onChange: e => setSearchTerm(e.target.value),\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchHistoryData,\n    className: \"search-btn\",\n    disabled: !searchTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, \"Search\")), (countryFilter || typeFilter || activeFilter || showOngoingOnly || searchTerm) && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-filter-btn visible\",\n    onClick: clearAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 11\n    }\n  }, \"Clear All Filters\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${activeFilter === 'red' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, \"Offline Issues\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, getStatusCounts().red), activeFilter === 'red' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 40\n    }\n  }, \"Filtered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${activeFilter === 'yellow' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('yellow'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, \"Degraded Issues\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, getStatusCounts().yellow || 0), activeFilter === 'yellow' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 43\n    }\n  }, \"Filtered\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${!activeFilter && !showOngoingOnly ? 'active' : ''}`,\n    onClick: clearAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, \"Total Issues\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, getStatusCounts().total), !activeFilter && !showOngoingOnly && !countryFilter && !typeFilter && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 84\n    }\n  }, \"Showing All\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${showOngoingOnly ? 'active' : ''}`,\n    onClick: handleOngoingFilterClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, \"Ongoing Issues\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }\n  }, getStatusCounts().ongoing), showOngoingOnly && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }, \"Filtered\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, \"Issues Shown\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }\n  }, filteredData.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 13\n    }\n  }, activeFilter ? `${activeFilter === 'yellow' ? 'Degraded' : 'Offline'} incidents` : showOngoingOnly ? 'Ongoing incidents' : 'All incidents')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, viewMode === 'country' ? 'Countries' : 'Phone Numbers'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, Object.keys(groupedData).length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }, countryFilter ? `In ${countryFilter}` : 'All regions', typeFilter ? `, type: ${typeFilter}` : '')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  }, viewMode === 'country' ? 'Countries' : 'Phone Numbers', \" - \", getFilterTitle()), (activeFilter || showOngoingOnly || searchTerm || countryFilter || typeFilter) && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-filter visible\",\n    onClick: clearAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 11\n    }\n  }, \"Clear All Filters\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }\n  }, Object.entries(groupedData).map(([key, events]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    className: viewMode === 'country' ? \"country-history-card\" : \"phone-history-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }\n  }, key), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"history-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 19\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 19\n    }\n  }, \"Started\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  }, \"Ended\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 19\n    }\n  }, \"Duration\"), viewMode === 'phone' && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 44\n    }\n  }, \"Country\"), viewMode === 'phone' && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 44\n    }\n  }, \"Type\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, events.map(event => /*#__PURE__*/React.createElement(\"tr\", {\n    key: event.id,\n    className: `status-${event.status}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StatusIndicator, {\n    status: event.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, formatDate(event.status_start)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 21\n    }\n  }, formatDate(event.status_end)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 21\n    }\n  }, calculateDuration(event.status_start, event.status_end)), viewMode === 'phone' && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 46\n    }\n  }, event.country), viewMode === 'phone' && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 46\n    }\n  }, event.type || 'N/A'))))))), Object.keys(groupedData).length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 11\n    }\n  }, \"No \", viewMode === 'country' ? 'countries' : 'phone numbers', \" match the current filters.\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearAllFilters,\n    className: \"clear-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }\n  }, \"Clear filters\"))));\n};\nexport default GlobalHistoryView;","map":{"version":3,"names":["React","useState","useEffect","historyApi","StatusIndicator","GlobalHistoryView","historyData","setHistoryData","filteredData","setFilteredData","activeFilter","setActiveFilter","showOngoingOnly","setShowOngoingOnly","loading","setLoading","error","setError","viewMode","setViewMode","searchTerm","setSearchTerm","countryFilter","setCountryFilter","typeFilter","setTypeFilter","timeRange","setTimeRange","startDate","setStartDate","endDate","setEndDate","showCustomDates","setShowCustomDates","fetchHistoryData","filtered","filter","item","status","term","toLowerCase","number","includes","search","country","type","status_end","params","response","getStatusHistory","getPhoneHistory","data","console","log","length","err","handleFilterClick","handleOngoingFilterClick","clearAllFilters","getUniqueCountries","countries","Set","forEach","add","Array","from","sort","getUniqueTypes","types","getStatusCounts","counts","yellow","red","ongoing","total","formatDate","dateString","date","Date","toLocaleString","calculateDuration","start","end","durationMs","Math","floor","handleTimeRangeChange","e","newRange","target","value","handleCustomDateSubmit","preventDefault","groupData","grouped","push","getFilterTitle","title","handleViewModeChange","mode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","onClick","htmlFor","id","onChange","onSubmit","required","placeholder","map","key","disabled","Object","keys","entries","events","event","status_start"],"sources":["/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/GlobalHistoryView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { historyApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalHistoryView.css';\n\nconst GlobalHistoryView = () => {\n  const [historyData, setHistoryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [showOngoingOnly, setShowOngoingOnly] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('country');  // 'country' or 'phone'\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // Added new filters\n  const [countryFilter, setCountryFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  \n  // Filter settings\n  const [timeRange, setTimeRange] = useState('5d');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [showCustomDates, setShowCustomDates] = useState(false);\n\n  useEffect(() => {\n    fetchHistoryData();\n  }, [timeRange, viewMode]);\n\n  // Apply filters when filter states change or historyData updates\n  useEffect(() => {\n    // First filter out the \"green\" (online) events as we're only interested in issues\n    let filtered = historyData.filter(item => item.status !== 'green');\n    \n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n    \n    // Apply search filter if in phone mode\n    if (viewMode === 'phone' && searchTerm) {\n      const term = searchTerm.toLowerCase();\n      filtered = filtered.filter(item => \n        item.number && item.number.toLowerCase().includes(term)\n      );\n    }\n    \n    // Apply country filter if selected\n    if (countryFilter) {\n      const search = countryFilter.toLowerCase();\n      filtered = filtered.filter(item => \n        item.country && item.country.toLowerCase().includes(search)\n      );\n    }\n    \n    // Apply type filter if selected\n    if (typeFilter) {\n      filtered = filtered.filter(item => item.type === typeFilter);\n    }\n    \n    // Apply ongoing filter if active\n    if (showOngoingOnly) {\n      filtered = filtered.filter(item => item.status_end === null);\n    }\n    \n    setFilteredData(filtered);\n  }, [activeFilter, showOngoingOnly, historyData, viewMode, searchTerm, countryFilter, typeFilter]);\n\n  const fetchHistoryData = async () => {\n    try {\n      setLoading(true);\n      \n      let params = { timeRange };\n      if (timeRange === 'custom' && startDate && endDate) {\n        params.startDate = startDate;\n        params.endDate = endDate;\n      }\n      \n      let response;\n      \n      if (viewMode === 'country') {\n        response = await historyApi.getStatusHistory(\n          params.timeRange,\n          params.startDate,\n          params.endDate\n        );\n      } else {\n        response = await historyApi.getPhoneHistory(\n          params.timeRange,\n          params.startDate,\n          params.endDate,\n          searchTerm || null\n        );\n      }\n      \n      setHistoryData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n      \n      // Log data for debugging\n      console.log('Fetched history data:', response.data);\n      console.log('Yellow items count:', response.data.filter(item => item.status === 'yellow').length);\n    } catch (err) {\n      setError('Failed to fetch history data. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching history data:', err);\n    }\n  };\n\n  const handleFilterClick = (status) => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n  \n  const handleOngoingFilterClick = () => {\n    setShowOngoingOnly(!showOngoingOnly);\n    // Don't reset status filter\n  };\n  \n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setShowOngoingOnly(false);\n    setSearchTerm('');\n    setCountryFilter('');\n    setTypeFilter('');\n  };\n  \n  // Get unique countries for filter dropdown\n  const getUniqueCountries = () => {\n    if (!historyData.length) return [];\n    \n    const countries = new Set();\n    historyData.forEach(item => {\n      if (item.country) countries.add(item.country);\n    });\n    \n    return Array.from(countries).sort();\n  };\n  \n  // Get unique types for filter dropdown\n  const getUniqueTypes = () => {\n    if (!historyData.length) return [];\n    \n    const types = new Set();\n    historyData.forEach(item => {\n      if (item.type) types.add(item.type);\n    });\n    \n    return Array.from(types).sort();\n  };\n  \n  // Get counts by status for issues only\n  const getStatusCounts = () => {\n    const counts = {\n      yellow: 0,\n      red: 0,\n      ongoing: 0,\n      total: 0\n    };\n    \n    historyData.forEach(item => {\n      if (item.status === 'yellow' || item.status === 'red') {\n        counts[item.status] = (counts[item.status] || 0) + 1;\n        counts.total++;\n        \n        // Count ongoing issues\n        if (item.status_end === null) {\n          counts.ongoing++;\n        }\n      }\n    });\n    \n    return counts;\n  };\n\n  // Format date to readable format\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Present';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Calculate duration between start and end times\n  const calculateDuration = (startDate, endDate) => {\n    if (!endDate) return 'Ongoing';\n    \n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const durationMs = end - start;\n    \n    // Less than a minute\n    if (durationMs < 60000) {\n      return `${Math.floor(durationMs / 1000)} seconds`;\n    }\n    // Less than an hour\n    if (durationMs < 3600000) {\n      return `${Math.floor(durationMs / 60000)} minutes`;\n    }\n    // Less than a day\n    if (durationMs < 86400000) {\n      return `${Math.floor(durationMs / 3600000)} hours`;\n    }\n    // More than a day\n    return `${Math.floor(durationMs / 86400000)} days`;\n  };\n\n  const handleTimeRangeChange = (e) => {\n    const newRange = e.target.value;\n    setTimeRange(newRange);\n    setShowCustomDates(newRange === 'custom');\n  };\n\n  const handleCustomDateSubmit = (e) => {\n    e.preventDefault();\n    fetchHistoryData();\n  };\n\n  // Group history data by country or phone number\n  const groupData = (data = filteredData) => {\n    const grouped = {};\n    \n    if (viewMode === 'country') {\n      data.forEach(item => {\n        if (!grouped[item.country]) {\n          grouped[item.country] = [];\n        }\n        grouped[item.country].push(item);\n      });\n    } else {\n      data.forEach(item => {\n        if (!grouped[item.number]) {\n          grouped[item.number] = [];\n        }\n        grouped[item.number].push(item);\n      });\n    }\n    \n    return grouped;\n  };\n\n  // Add a title that shows the current filter status\n  const getFilterTitle = () => {\n    let title = \"\";\n    \n    if (activeFilter) {\n      title += `${activeFilter === 'yellow' ? 'Degraded' : 'Offline'} `;\n    } else {\n      title += \"All \";\n    }\n    \n    title += \"Issues\";\n    \n    if (showOngoingOnly) {\n      title += \" (Ongoing Only)\";\n    }\n    \n    if (countryFilter) {\n      title += ` in ${countryFilter}`;\n    }\n    \n    if (typeFilter) {\n      title += ` of type ${typeFilter}`;\n    }\n    \n    return title;\n  };\n\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n    // Reset filters when changing view mode\n    setActiveFilter(null);\n    setShowOngoingOnly(false);\n    setSearchTerm('');\n    setCountryFilter('');\n    setTypeFilter('');\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading history data...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  const groupedData = groupData();\n  \n  return (\n    <div className=\"history-view\">\n      <h1>Global Status History</h1>\n      \n      <div className=\"view-mode-toggle\">\n        <button \n          className={`toggle-btn ${viewMode === 'country' ? 'active' : ''}`}\n          onClick={() => handleViewModeChange('country')}\n        >\n          View by Country\n        </button>\n        <button \n          className={`toggle-btn ${viewMode === 'phone' ? 'active' : ''}`}\n          onClick={() => handleViewModeChange('phone')}\n        >\n          View by Phone Number\n        </button>\n      </div>\n      \n      <div className=\"filter-controls\">\n        <div className=\"time-range-selector\">\n          <label htmlFor=\"timeRange\">Time Range:</label>\n          <select \n            id=\"timeRange\" \n            value={timeRange} \n            onChange={handleTimeRangeChange}\n            className=\"time-range-select\"\n          >\n            <option value=\"24h\">Last 24 Hours</option>\n            <option value=\"48h\">Last 48 Hours</option>\n            <option value=\"5d\">Last 5 Days</option>\n            <option value=\"custom\">Custom Range</option>\n          </select>\n        </div>\n        \n        {showCustomDates && (\n          <form onSubmit={handleCustomDateSubmit} className=\"custom-date-form\">\n            <div className=\"date-input-group\">\n              <label htmlFor=\"startDate\">Start Date:</label>\n              <input \n                type=\"datetime-local\" \n                id=\"startDate\" \n                value={startDate} \n                onChange={(e) => setStartDate(e.target.value)}\n                required\n              />\n            </div>\n            \n            <div className=\"date-input-group\">\n              <label htmlFor=\"endDate\">End Date:</label>\n              <input \n                type=\"datetime-local\" \n                id=\"endDate\" \n                value={endDate} \n                onChange={(e) => setEndDate(e.target.value)}\n                required\n              />\n            </div>\n            \n            <button type=\"submit\" className=\"apply-btn\">Apply</button>\n          </form>\n        )}\n        \n        <div className=\"advanced-filters\">\n          <div className=\"filter-group\">\n            <label htmlFor=\"countryFilter\">Country:</label>\n            <div className=\"search-field\">\n              <input\n                type=\"text\"\n                id=\"countryFilter\"\n                placeholder=\"Search for a country...\"\n                value={countryFilter}\n                onChange={(e) => setCountryFilter(e.target.value)}\n                className=\"search-input\"\n              />\n              {countryFilter && (\n                <button \n                  className=\"clear-search-btn\"\n                  onClick={() => setCountryFilter('')}\n                >\n                  ×\n                </button>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"filter-group\">\n            <label htmlFor=\"typeFilter\">Type:</label>\n            <select\n              id=\"typeFilter\"\n              value={typeFilter}\n              onChange={(e) => setTypeFilter(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">All Types</option>\n              {getUniqueTypes().map(type => (\n                <option key={type} value={type}>{type}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {viewMode === 'phone' && (\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search phone numbers...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n            <button \n              onClick={fetchHistoryData} \n              className=\"search-btn\"\n              disabled={!searchTerm}\n            >\n              Search\n            </button>\n          </div>\n        )}\n        \n        {(countryFilter || typeFilter || activeFilter || showOngoingOnly || searchTerm) && (\n          <button\n            className=\"clear-filter-btn visible\"\n            onClick={clearAllFilters}\n          >\n            Clear All Filters\n          </button>\n        )}\n      </div>\n      \n      <div className=\"history-summary\">\n        <div className=\"summary-cards\">\n          <div \n            className={`summary-card ${activeFilter === 'red' ? 'active' : ''}`}\n            onClick={() => handleFilterClick('red')}\n          >\n            <h3>Offline Issues</h3>\n            <div className=\"summary-count red\">{getStatusCounts().red}</div>\n            {activeFilter === 'red' && <div className=\"filter-badge\">Filtered</div>}\n          </div>\n          \n          <div \n            className={`summary-card ${activeFilter === 'yellow' ? 'active' : ''}`}\n            onClick={() => handleFilterClick('yellow')}\n          >\n            <h3>Degraded Issues</h3>\n            <div className=\"summary-count yellow\">{getStatusCounts().yellow || 0}</div>\n            {activeFilter === 'yellow' && <div className=\"filter-badge\">Filtered</div>}\n          </div>\n        </div>\n        \n        <div className=\"summary-cards\">\n          <div \n            className={`summary-card ${!activeFilter && !showOngoingOnly ? 'active' : ''}`}\n            onClick={clearAllFilters}\n          >\n            <h3>Total Issues</h3>\n            <div className=\"summary-count blue\">{getStatusCounts().total}</div>\n            {!activeFilter && !showOngoingOnly && !countryFilter && !typeFilter && <div className=\"filter-badge\">Showing All</div>}\n          </div>\n          \n          <div \n            className={`summary-card ${showOngoingOnly ? 'active' : ''}`}\n            onClick={handleOngoingFilterClick}\n          >\n            <h3>Ongoing Issues</h3>\n            <div className=\"summary-count purple\">{getStatusCounts().ongoing}</div>\n            {showOngoingOnly && <div className=\"filter-badge\">Filtered</div>}\n          </div>\n        </div>\n        \n        <div className=\"summary-info\">\n          <div className=\"info-card\">\n            <h3>Issues Shown</h3>\n            <div className=\"info-value\">{filteredData.length}</div>\n            <div className=\"info-detail\">\n              {activeFilter \n                ? `${activeFilter === 'yellow' ? 'Degraded' : 'Offline'} incidents` \n                : (showOngoingOnly ? 'Ongoing incidents' : 'All incidents')}\n            </div>\n          </div>\n          <div className=\"info-card\">\n            <h3>{viewMode === 'country' ? 'Countries' : 'Phone Numbers'}</h3>\n            <div className=\"info-value\">{Object.keys(groupedData).length}</div>\n            <div className=\"info-detail\">\n              {countryFilter ? `In ${countryFilter}` : 'All regions'}\n              {typeFilter ? `, type: ${typeFilter}` : ''}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"history-header\">\n        <h2>{viewMode === 'country' ? 'Countries' : 'Phone Numbers'} - {getFilterTitle()}</h2>\n        {(activeFilter || showOngoingOnly || searchTerm || countryFilter || typeFilter) && (\n          <button \n            className=\"clear-filter visible\"\n            onClick={clearAllFilters}\n          >\n            Clear All Filters\n          </button>\n        )}\n      </div>\n      \n      <div className=\"history-list\">\n        {Object.entries(groupedData).map(([key, events]) => (\n          <div key={key} className={viewMode === 'country' ? \"country-history-card\" : \"phone-history-card\"}>\n            <h2>{key}</h2>\n            <table className=\"history-table\">\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Started</th>\n                  <th>Ended</th>\n                  <th>Duration</th>\n                  {viewMode === 'phone' && <th>Country</th>}\n                  {viewMode === 'phone' && <th>Type</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {events.map((event) => (\n                  <tr key={event.id} className={`status-${event.status}`}>\n                    <td>\n                      <StatusIndicator status={event.status} />\n                    </td>\n                    <td>{formatDate(event.status_start)}</td>\n                    <td>{formatDate(event.status_end)}</td>\n                    <td>{calculateDuration(event.status_start, event.status_end)}</td>\n                    {viewMode === 'phone' && <td>{event.country}</td>}\n                    {viewMode === 'phone' && <td>{event.type || 'N/A'}</td>}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n        \n        {Object.keys(groupedData).length === 0 && (\n          <div className=\"no-results\">\n            No {viewMode === 'country' ? 'countries' : 'phone numbers'} match the current filters.\n            <button onClick={clearAllFilters} className=\"clear-link\">Clear filters</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalHistoryView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}