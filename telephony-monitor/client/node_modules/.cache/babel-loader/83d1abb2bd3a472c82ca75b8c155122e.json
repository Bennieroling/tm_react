{"ast":null,"code":"var _jsxFileName = \"/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/GlobalHistoryView.js\";\nconst handleFilterClick = status => {\n  if (activeFilter === status) {\n    // If clicking the same filter again, clear the filter\n    setActiveFilter(null);\n  } else {\n    setActiveFilter(status);\n  }\n};\n\n// Get counts by status\nconst getStatusCounts = () => {\n  const counts = {\n    green: 0,\n    yellow: 0,\n    red: 0\n  };\n  historyData.forEach(item => {\n    counts[item.status] = (counts[item.status] || 0) + 1;\n  });\n  return counts;\n};\nimport React, { useState, useEffect } from 'react';\nimport { historyApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalHistoryView.css';\nconst GlobalHistoryView = () => {\n  const [historyData, setHistoryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Filter settings\n  const [timeRange, setTimeRange] = useState('5d');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [showCustomDates, setShowCustomDates] = useState(false);\n  useEffect(() => {\n    fetchHistoryData();\n  }, [timeRange]);\n\n  // Apply filters when activeFilter changes or historyData updates\n  useEffect(() => {\n    if (!activeFilter) {\n      setFilteredData(historyData);\n      return;\n    }\n    const filtered = historyData.filter(item => item.status === activeFilter);\n    setFilteredData(filtered);\n  }, [activeFilter, historyData]);\n  const fetchHistoryData = async () => {\n    try {\n      setLoading(true);\n      let params = {\n        timeRange\n      };\n      if (timeRange === 'custom' && startDate && endDate) {\n        params.startDate = startDate;\n        params.endDate = endDate;\n      }\n      const response = await historyApi.getStatusHistory(params.timeRange, params.startDate, params.endDate);\n      setHistoryData(response.data);\n      setFilteredData(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch history data. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching history data:', err);\n    }\n  };\n\n  // Format date to readable format\n  const formatDate = dateString => {\n    if (!dateString) return 'Present';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Calculate duration between start and end times\n  const calculateDuration = (startDate, endDate) => {\n    if (!endDate) return 'Ongoing';\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const durationMs = end - start;\n\n    // Less than a minute\n    if (durationMs < 60000) {\n      return `${Math.floor(durationMs / 1000)} seconds`;\n    }\n    // Less than an hour\n    if (durationMs < 3600000) {\n      return `${Math.floor(durationMs / 60000)} minutes`;\n    }\n    // Less than a day\n    if (durationMs < 86400000) {\n      return `${Math.floor(durationMs / 3600000)} hours`;\n    }\n    // More than a day\n    return `${Math.floor(durationMs / 86400000)} days`;\n  };\n  const handleTimeRangeChange = e => {\n    const newRange = e.target.value;\n    setTimeRange(newRange);\n    setShowCustomDates(newRange === 'custom');\n  };\n  const handleCustomDateSubmit = e => {\n    e.preventDefault();\n    fetchHistoryData();\n  };\n\n  // Group history data by country\n  const groupByCountry = (data = filteredData) => {\n    const grouped = {};\n    data.forEach(item => {\n      if (!grouped[item.country]) {\n        grouped[item.country] = [];\n      }\n      grouped[item.country].push(item);\n    });\n    return grouped;\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 10\n      }\n    }, \"Loading history data...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 10\n      }\n    }, error);\n  }\n  const groupedData = groupByCountry();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, \"Global Status History\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-range-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"timeRange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Time Range:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"timeRange\",\n    value: timeRange,\n    onChange: handleTimeRangeChange,\n    className: \"time-range-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"24h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Last 24 Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"48h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Last 48 Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Last 5 Days\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Custom Range\"))), showCustomDates && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCustomDateSubmit,\n    className: \"custom-date-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Start Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    id: \"startDate\",\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"endDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"End Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    id: \"endDate\",\n    value: endDate,\n    onChange: e => setEndDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"apply-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Apply\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${activeFilter === 'green' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('green'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, \"Online Events\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, getStatusCounts().green), activeFilter === 'green' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 40\n    }\n  }, \"Filtered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${activeFilter === 'yellow' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('yellow'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Degraded Events\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, getStatusCounts().yellow || 0), activeFilter === 'yellow' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }, \"Filtered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `summary-card ${activeFilter === 'red' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"Offline Events\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-count red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, getStatusCounts().red), activeFilter === 'red' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 38\n    }\n  }, \"Filtered\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, historyData.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"Total status changes\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, \"Countries\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, Object.keys(groupByCountry(filteredData)).length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, activeFilter ? `With ${activeFilter === 'green' ? 'online' : activeFilter === 'yellow' ? 'degraded' : 'offline'} events` : 'With status changes'))), activeFilter && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-filter\",\n    onClick: () => setActiveFilter(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \"Clear Filter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, Object.entries(groupedData).map(([country, events]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: country,\n    className: \"country-history-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, country), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"history-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, \"Started\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, \"Ended\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"Duration\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, events.map(event => /*#__PURE__*/React.createElement(\"tr\", {\n    key: event.id,\n    className: `status-${event.status}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StatusIndicator, {\n    status: event.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, formatDate(event.status_start)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, formatDate(event.status_end)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, calculateDuration(event.status_start, event.status_end))))))))));\n};\nexport default GlobalHistoryView;","map":{"version":3,"names":["handleFilterClick","status","activeFilter","setActiveFilter","getStatusCounts","counts","green","yellow","red","historyData","forEach","item","React","useState","useEffect","historyApi","StatusIndicator","GlobalHistoryView","setHistoryData","filteredData","setFilteredData","loading","setLoading","error","setError","timeRange","setTimeRange","startDate","setStartDate","endDate","setEndDate","showCustomDates","setShowCustomDates","fetchHistoryData","filtered","filter","params","response","getStatusHistory","data","err","console","formatDate","dateString","date","Date","toLocaleString","calculateDuration","start","end","durationMs","Math","floor","handleTimeRangeChange","e","newRange","target","value","handleCustomDateSubmit","preventDefault","groupByCountry","grouped","country","push","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","htmlFor","id","onChange","onSubmit","type","required","onClick","length","Object","keys","entries","map","events","key","event","status_start","status_end"],"sources":["/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/GlobalHistoryView.js"],"sourcesContent":["const handleFilterClick = (status) => {\n  if (activeFilter === status) {\n    // If clicking the same filter again, clear the filter\n    setActiveFilter(null);\n  } else {\n    setActiveFilter(status);\n  }\n};\n\n// Get counts by status\nconst getStatusCounts = () => {\n  const counts = {\n    green: 0,\n    yellow: 0,\n    red: 0\n  };\n  \n  historyData.forEach(item => {\n    counts[item.status] = (counts[item.status] || 0) + 1;\n  });\n  \n  return counts;\n};import React, { useState, useEffect } from 'react';\nimport { historyApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalHistoryView.css';\n\nconst GlobalHistoryView = () => {\nconst [historyData, setHistoryData] = useState([]);\nconst [filteredData, setFilteredData] = useState([]);\nconst [activeFilter, setActiveFilter] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\n\n// Filter settings\nconst [timeRange, setTimeRange] = useState('5d');\nconst [startDate, setStartDate] = useState('');\nconst [endDate, setEndDate] = useState('');\nconst [showCustomDates, setShowCustomDates] = useState(false);\n\nuseEffect(() => {\n  fetchHistoryData();\n}, [timeRange]);\n\n// Apply filters when activeFilter changes or historyData updates\nuseEffect(() => {\n  if (!activeFilter) {\n    setFilteredData(historyData);\n    return;\n  }\n  \n  const filtered = historyData.filter(item => item.status === activeFilter);\n  setFilteredData(filtered);\n}, [activeFilter, historyData]);\n\nconst fetchHistoryData = async () => {\n  try {\n    setLoading(true);\n    \n    let params = { timeRange };\n    if (timeRange === 'custom' && startDate && endDate) {\n      params.startDate = startDate;\n      params.endDate = endDate;\n    }\n    \n    const response = await historyApi.getStatusHistory(\n      params.timeRange,\n      params.startDate,\n      params.endDate\n    );\n    \n    setHistoryData(response.data);\n    setFilteredData(response.data);\n    setLoading(false);\n  } catch (err) {\n    setError('Failed to fetch history data. Please try again later.');\n    setLoading(false);\n    console.error('Error fetching history data:', err);\n  }\n};\n\n// Format date to readable format\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Present';\n  const date = new Date(dateString);\n  return date.toLocaleString();\n};\n\n// Calculate duration between start and end times\nconst calculateDuration = (startDate, endDate) => {\n  if (!endDate) return 'Ongoing';\n  \n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  const durationMs = end - start;\n  \n  // Less than a minute\n  if (durationMs < 60000) {\n    return `${Math.floor(durationMs / 1000)} seconds`;\n  }\n  // Less than an hour\n  if (durationMs < 3600000) {\n    return `${Math.floor(durationMs / 60000)} minutes`;\n  }\n  // Less than a day\n  if (durationMs < 86400000) {\n    return `${Math.floor(durationMs / 3600000)} hours`;\n  }\n  // More than a day\n  return `${Math.floor(durationMs / 86400000)} days`;\n};\n\nconst handleTimeRangeChange = (e) => {\n  const newRange = e.target.value;\n  setTimeRange(newRange);\n  setShowCustomDates(newRange === 'custom');\n};\n\nconst handleCustomDateSubmit = (e) => {\n  e.preventDefault();\n  fetchHistoryData();\n};\n\n// Group history data by country\nconst groupByCountry = (data = filteredData) => {\n  const grouped = {};\n  \n  data.forEach(item => {\n    if (!grouped[item.country]) {\n      grouped[item.country] = [];\n    }\n    grouped[item.country].push(item);\n  });\n  \n  return grouped;\n};\n\nif (loading) {\n  return <div className=\"loading\">Loading history data...</div>;\n}\n\nif (error) {\n  return <div className=\"error\">{error}</div>;\n}\n\nconst groupedData = groupByCountry();\n\nreturn (\n  <div className=\"history-view\">\n    <h1>Global Status History</h1>\n    \n    <div className=\"filter-controls\">\n      <div className=\"time-range-selector\">\n        <label htmlFor=\"timeRange\">Time Range:</label>\n        <select \n          id=\"timeRange\" \n          value={timeRange} \n          onChange={handleTimeRangeChange}\n          className=\"time-range-select\"\n        >\n          <option value=\"24h\">Last 24 Hours</option>\n          <option value=\"48h\">Last 48 Hours</option>\n          <option value=\"5d\">Last 5 Days</option>\n          <option value=\"custom\">Custom Range</option>\n        </select>\n      </div>\n      \n      {showCustomDates && (\n        <form onSubmit={handleCustomDateSubmit} className=\"custom-date-form\">\n          <div className=\"date-input-group\">\n            <label htmlFor=\"startDate\">Start Date:</label>\n            <input \n              type=\"datetime-local\" \n              id=\"startDate\" \n              value={startDate} \n              onChange={(e) => setStartDate(e.target.value)}\n              required\n            />\n          </div>\n          \n          <div className=\"date-input-group\">\n            <label htmlFor=\"endDate\">End Date:</label>\n            <input \n              type=\"datetime-local\" \n              id=\"endDate\" \n              value={endDate} \n              onChange={(e) => setEndDate(e.target.value)}\n              required\n            />\n          </div>\n          \n          <button type=\"submit\" className=\"apply-btn\">Apply</button>\n        </form>\n      )}\n    </div>\n    \n    <div className=\"history-summary\">\n      <div className=\"summary-cards\">\n        <div \n          className={`summary-card ${activeFilter === 'green' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('green')}\n        >\n          <h3>Online Events</h3>\n          <div className=\"summary-count green\">{getStatusCounts().green}</div>\n          {activeFilter === 'green' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n        \n        <div \n          className={`summary-card ${activeFilter === 'yellow' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('yellow')}\n        >\n          <h3>Degraded Events</h3>\n          <div className=\"summary-count yellow\">{getStatusCounts().yellow || 0}</div>\n          {activeFilter === 'yellow' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n        \n        <div \n          className={`summary-card ${activeFilter === 'red' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('red')}\n        >\n          <h3>Offline Events</h3>\n          <div className=\"summary-count red\">{getStatusCounts().red}</div>\n          {activeFilter === 'red' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n      </div>\n      \n      <div className=\"summary-info\">\n        <div className=\"info-card\">\n          <h3>Events</h3>\n          <div className=\"info-value\">{historyData.length}</div>\n          <div className=\"info-detail\">Total status changes</div>\n        </div>\n        <div className=\"info-card\">\n          <h3>Countries</h3>\n          <div className=\"info-value\">{Object.keys(groupByCountry(filteredData)).length}</div>\n          <div className=\"info-detail\">\n            {activeFilter ? `With ${activeFilter === 'green' ? 'online' : activeFilter === 'yellow' ? 'degraded' : 'offline'} events` : 'With status changes'}\n          </div>\n        </div>\n      </div>\n      \n      {activeFilter && (\n        <button \n          className=\"clear-filter\"\n          onClick={() => setActiveFilter(null)}\n        >\n          Clear Filter\n        </button>\n      )}\n    </div>\n    \n    <div className=\"history-list\">\n      {Object.entries(groupedData).map(([country, events]) => (\n        <div key={country} className=\"country-history-card\">\n          <h2>{country}</h2>\n          <table className=\"history-table\">\n            <thead>\n              <tr>\n                <th>Status</th>\n                <th>Started</th>\n                <th>Ended</th>\n                <th>Duration</th>\n              </tr>\n            </thead>\n            <tbody>\n              {events.map((event) => (\n                <tr key={event.id} className={`status-${event.status}`}>\n                  <td>\n                    <StatusIndicator status={event.status} />\n                  </td>\n                  <td>{formatDate(event.status_start)}</td>\n                  <td>{formatDate(event.status_end)}</td>\n                  <td>{calculateDuration(event.status_start, event.status_end)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n};\n\nexport default GlobalHistoryView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}