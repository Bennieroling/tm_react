{"ast":null,"code":"import axios from 'axios';\n\n// Create a base API client that uses relative URLs\nconst apiClient = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Export all required APIs to match the original structure\nexport const telemetryApi = {\n  fetchGlobalTelemetry: async () => {\n    try {\n      const response = await apiClient.get('/telemetry/global');\n      return response.data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n  fetchCountryTelemetry: async countryId => {\n    try {\n      const response = await apiClient.get(`/telemetry/country/${countryId}`);\n      return response.data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};\nexport const historyApi = {\n  fetchHistory: async () => {\n    try {\n      const response = await apiClient.get('/history');\n      return response.data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};\n\n// Add the missing phoneApi\nexport const phoneApi = {\n  fetchPhoneStatus: async () => {\n    try {\n      // Using a mock response since we don't know the exact endpoint\n      const mockResponse = {\n        status: 'operational'\n      };\n      return mockResponse;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","timeout","headers","telemetryApi","fetchGlobalTelemetry","response","get","data","error","console","fetchCountryTelemetry","countryId","historyApi","fetchHistory","phoneApi","fetchPhoneStatus","mockResponse","status"],"sources":["/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create a base API client that uses relative URLs\nconst apiClient = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Export all required APIs to match the original structure\nexport const telemetryApi = {\n  fetchGlobalTelemetry: async () => {\n    try {\n      const response = await apiClient.get('/telemetry/global');\n      return response.data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  },\n  \n  fetchCountryTelemetry: async (countryId) => {\n    try {\n      const response = await apiClient.get(`/telemetry/country/${countryId}`);\n      return response.data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};\n\nexport const historyApi = {\n  fetchHistory: async () => {\n    try {\n      const response = await apiClient.get('/history');\n      return response.data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};\n\n// Add the missing phoneApi\nexport const phoneApi = {\n  fetchPhoneStatus: async () => {\n    try {\n      // Using a mock response since we don't know the exact endpoint\n      const mockResponse = { status: 'operational' };\n      return mockResponse;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,oBAAoB,EAAE,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAG,CAAC,mBAAmB,CAAC;MACzD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,qBAAqB,EAAE,MAAOC,SAAS,IAAK;IAC1C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAG,CAAC,sBAAsBK,SAAS,EAAE,CAAC;MACvE,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG;EACxBC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAG,CAAC,UAAU,CAAC;MAChD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,QAAQ,GAAG;EACtBC,gBAAgB,EAAE,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF;MACA,MAAMC,YAAY,GAAG;QAAEC,MAAM,EAAE;MAAc,CAAC;MAC9C,OAAOD,YAAY;IACrB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}