{"ast":null,"code":"var _jsxFileName = \"/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/CountryView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './CountryView.css';\nconst CountryView = () => {\n  const {\n    countryId\n  } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getCountryStatus(countryId);\n        setCountryData(response.data);\n        setLoading(false);\n      } catch (err) {\n        var _err$response;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404 ? `No data found for country ID ${countryId}` : 'Failed to fetch country data. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching country data:', err);\n      }\n    };\n    fetchData();\n\n    // Set up polling every 1 minute\n    const intervalId = setInterval(fetchData, 60 * 1000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [countryId]);\n\n  // Format date to readable format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }, \"Loading country data...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, error), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"back-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Back to Global View\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"country-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"country-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"back-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"\\u2190 Back to Global View\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, countryData.country, \" Telephony Status\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"country-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Status:\"), /*#__PURE__*/React.createElement(StatusIndicator, {\n    status: countryData.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Region:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, countryData.region)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Last Updated:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, formatDate(countryData.last_updated))), countryData.provider && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Provider:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, countryData.provider)), countryData.type && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, countryData.type)))));\n};\nexport default CountryView;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","telemetryApi","StatusIndicator","CountryView","countryId","countryData","setCountryData","loading","setLoading","error","setError","fetchData","response","getCountryStatus","data","err","_err$response","status","console","intervalId","setInterval","clearInterval","formatDate","dateString","date","Date","toLocaleString","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","country","region","last_updated","provider","type"],"sources":["/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/CountryView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './CountryView.css';\n\nconst CountryView = () => {\n  const { countryId } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getCountryStatus(countryId);\n        setCountryData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(\n          err.response?.status === 404\n            ? `No data found for country ID ${countryId}`\n            : 'Failed to fetch country data. Please try again later.'\n        );\n        setLoading(false);\n        console.error('Error fetching country data:', err);\n      }\n    };\n\n    fetchData();\n\n    // Set up polling every 1 minute\n    const intervalId = setInterval(fetchData, 60 * 1000);\n    \n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [countryId]);\n\n  // Format date to readable format\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading country data...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <div className=\"error\">{error}</div>\n        <Link to=\"/\" className=\"back-link\">Back to Global View</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"country-view\">\n      <div className=\"country-header\">\n        <Link to=\"/\" className=\"back-link\">\n          &larr; Back to Global View\n        </Link>\n        <h1>{countryData.country} Telephony Status</h1>\n        <div className=\"country-summary\">\n          <div className=\"summary-item\">\n            <span className=\"label\">Status:</span>\n            <StatusIndicator status={countryData.status} />\n          </div>\n          <div className=\"summary-item\">\n            <span className=\"label\">Region:</span>\n            <span className=\"value\">{countryData.region}</span>\n          </div>\n          <div className=\"summary-item\">\n            <span className=\"label\">Last Updated:</span>\n            <span className=\"value\">{formatDate(countryData.last_updated)}</span>\n          </div>\n          {countryData.provider && (\n            <div className=\"summary-item\">\n              <span className=\"label\">Provider:</span>\n              <span className=\"value\">{countryData.provider}</span>\n            </div>\n          )}\n          {countryData.type && (\n            <div className=\"summary-item\">\n              <span className=\"label\">Type:</span>\n              <span className=\"value\">{countryData.type}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}