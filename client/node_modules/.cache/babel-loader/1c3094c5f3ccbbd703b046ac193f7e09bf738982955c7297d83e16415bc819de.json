{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Downloads/gitTemp/tm_react/client/src/views/GlobalView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalView.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalView = () => {\n  _s();\n  const [telemetryData, setTelemetryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [activeRegion, setActiveRegion] = useState(null);\n  const [countrySearch, setCountrySearch] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getGlobalStatus();\n        console.log('Global status data:', response.data);\n\n        // Handle the case where the response contains a data property (wrapped response)\n        const countryData = response.data.data || response.data;\n\n        // Make sure we have an array before proceeding\n        if (Array.isArray(countryData)) {\n          setTelemetryData(countryData);\n          setFilteredData(countryData);\n        } else {\n          console.error('Expected an array but received:', typeof countryData);\n          setError('Received invalid data format from the server');\n        }\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch telemetry data. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching telemetry data:', err);\n      }\n    };\n    fetchData();\n\n    // Set up polling every 5 minutes\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Apply filters when activeFilter or activeRegion changes or telemetryData updates\n  useEffect(() => {\n    if (!Array.isArray(telemetryData)) {\n      setFilteredData([]);\n      return;\n    }\n    let filtered = [...telemetryData];\n\n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n\n    // Apply region filter if active\n    if (activeRegion) {\n      filtered = filtered.filter(item => item.region === activeRegion);\n    }\n\n    // Apply country search if provided\n    if (countrySearch) {\n      const search = countrySearch.toLowerCase();\n      filtered = filtered.filter(item => item.country.toLowerCase().includes(search));\n    }\n    setFilteredData(filtered);\n  }, [activeFilter, activeRegion, telemetryData, countrySearch]);\n\n  // Handle status filter click\n  const handleFilterClick = status => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n\n  // Handle region filter click\n  const handleRegionClick = region => {\n    if (activeRegion === region) {\n      // If clicking the same region again, clear the filter\n      setActiveRegion(null);\n    } else {\n      setActiveRegion(region);\n    }\n  };\n\n  // Clear all filters\n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setActiveRegion(null);\n    setCountrySearch('');\n  };\n\n  // Format date to readable format\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Get counts by region and status\n  const getStatusCounts = () => {\n    let regions = {};\n    let statuses = {\n      green: 0,\n      yellow: 0,\n      red: 0\n    };\n    if (Array.isArray(telemetryData)) {\n      telemetryData.forEach(item => {\n        // Count by region\n        if (!regions[item.region]) {\n          regions[item.region] = {\n            total: 0,\n            green: 0,\n            yellow: 0,\n            red: 0\n          };\n        }\n        regions[item.region].total += 1;\n        regions[item.region][item.status] = (regions[item.region][item.status] || 0) + 1;\n\n        // Count by status\n        statuses[item.status] = (statuses[item.status] || 0) + 1;\n      });\n    } else {\n      console.error(\"telemetryData is undefined or null\");\n      // Initialize with empty objects\n      regions = {};\n      statuses = {\n        green: 0,\n        yellow: 0,\n        red: 0\n      };\n    }\n    return {\n      regions,\n      statuses\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading global status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    regions,\n    statuses\n  } = getStatusCounts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Global Telephony Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last updated: \", new Date().toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-card ${activeFilter === 'green' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('green'),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-count green\",\n          children: statuses.green\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), activeFilter === 'green' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-badge\",\n          children: \"Filtered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-card ${activeFilter === 'yellow' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('yellow'),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Degraded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-count yellow\",\n          children: statuses.yellow || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), activeFilter === 'yellow' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-badge\",\n          children: \"Filtered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-card ${activeFilter === 'red' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('red'),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Offline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-count red\",\n          children: statuses.red\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), activeFilter === 'red' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-badge\",\n          children: \"Filtered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), Object.keys(regions).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"region-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Status by Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region-cards\",\n        children: Object.entries(regions).map(([region, counts]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `region-card ${activeRegion === region ? 'active' : ''}`,\n          onClick: () => handleRegionClick(region),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"region-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: counts.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Online:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: counts.green\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Degraded:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: counts.yellow || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Offline:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: counts.red\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), activeRegion === region && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-badge\",\n            children: \"Filtered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 45\n          }, this)]\n        }, region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countries-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: activeFilter || activeRegion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Countries\", activeFilter && ` - ${activeFilter === 'green' ? 'Online' : activeFilter === 'yellow' ? 'Degraded' : 'Offline'}`, activeRegion && ` - ${activeRegion}`, ` (${filteredData.length})`]\n          }, void 0, true) : `All Countries (${telemetryData.length || 0})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search countries...\",\n            value: countrySearch,\n            onChange: e => setCountrySearch(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), countrySearch && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-search-btn\",\n            onClick: () => setCountrySearch(''),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), (activeFilter || activeRegion || countrySearch) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-filter visible\",\n          onClick: clearAllFilters,\n          children: \"Clear All Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"telemetry-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredData.length > 0 ? filteredData.map(country => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: country.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: country.region || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                status: country.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(country.last_updated || country.last_checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/country/${country.id || country.country}`,\n                className: \"details-link\",\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, country.id || country.country, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              style: {\n                textAlign: 'center',\n                padding: '20px'\n              },\n              children: \"No countries match your filter criteria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalView, \"/Hh4rb8ofujSVaBDhNmmYZs26p0=\");\n_c = GlobalView;\nexport default GlobalView;\nvar _c;\n$RefreshReg$(_c, \"GlobalView\");","map":{"version":3,"names":["React","useState","useEffect","Link","telemetryApi","StatusIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalView","_s","telemetryData","setTelemetryData","filteredData","setFilteredData","activeFilter","setActiveFilter","activeRegion","setActiveRegion","countrySearch","setCountrySearch","loading","setLoading","error","setError","fetchData","response","getGlobalStatus","console","log","data","countryData","Array","isArray","err","intervalId","setInterval","clearInterval","filtered","filter","item","status","region","search","toLowerCase","country","includes","handleFilterClick","handleRegionClick","clearAllFilters","formatDate","dateString","date","Date","toLocaleString","getStatusCounts","regions","statuses","green","yellow","red","forEach","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","length","entries","map","counts","type","placeholder","value","onChange","e","target","last_updated","last_checked","to","id","colSpan","style","textAlign","padding","_c","$RefreshReg$"],"sources":["/Users/ben/Downloads/gitTemp/tm_react/client/src/views/GlobalView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalView.css';\n\nconst GlobalView = () => {\n  const [telemetryData, setTelemetryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [activeRegion, setActiveRegion] = useState(null);\n  const [countrySearch, setCountrySearch] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getGlobalStatus();\n        console.log('Global status data:', response.data);\n        \n        // Handle the case where the response contains a data property (wrapped response)\n        const countryData = response.data.data || response.data;\n        \n        // Make sure we have an array before proceeding\n        if (Array.isArray(countryData)) {\n          setTelemetryData(countryData);\n          setFilteredData(countryData);\n        } else {\n          console.error('Expected an array but received:', typeof countryData);\n          setError('Received invalid data format from the server');\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch telemetry data. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching telemetry data:', err);\n      }\n    };\n\n    fetchData();\n\n    // Set up polling every 5 minutes\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000);\n    \n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  \n  // Apply filters when activeFilter or activeRegion changes or telemetryData updates\n  useEffect(() => {\n    if (!Array.isArray(telemetryData)) {\n      setFilteredData([]);\n      return;\n    }\n    \n    let filtered = [...telemetryData];\n    \n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n    \n    // Apply region filter if active\n    if (activeRegion) {\n      filtered = filtered.filter(item => item.region === activeRegion);\n    }\n    \n    // Apply country search if provided\n    if (countrySearch) {\n      const search = countrySearch.toLowerCase();\n      filtered = filtered.filter(item => \n        item.country.toLowerCase().includes(search)\n      );\n    }\n    \n    setFilteredData(filtered);\n  }, [activeFilter, activeRegion, telemetryData, countrySearch]);\n  \n  // Handle status filter click\n  const handleFilterClick = (status) => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n  \n  // Handle region filter click\n  const handleRegionClick = (region) => {\n    if (activeRegion === region) {\n      // If clicking the same region again, clear the filter\n      setActiveRegion(null);\n    } else {\n      setActiveRegion(region);\n    }\n  };\n  \n  // Clear all filters\n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setActiveRegion(null);\n    setCountrySearch('');\n  };\n\n  // Format date to readable format\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Get counts by region and status\n  const getStatusCounts = () => {\n    let regions = {};\n    let statuses = {\n      green: 0,\n      yellow: 0,\n      red: 0\n    };\n    \n    if (Array.isArray(telemetryData)) {\n      telemetryData.forEach(item => {\n        // Count by region\n        if (!regions[item.region]) {\n          regions[item.region] = {\n            total: 0,\n            green: 0,\n            yellow: 0,\n            red: 0\n          };\n        }\n        \n        regions[item.region].total += 1;\n        regions[item.region][item.status] = (regions[item.region][item.status] || 0) + 1;\n        \n        // Count by status\n        statuses[item.status] = (statuses[item.status] || 0) + 1;\n      });\n    } else {\n      console.error(\"telemetryData is undefined or null\");\n      // Initialize with empty objects\n      regions = {};\n      statuses = { green: 0, yellow: 0, red: 0 };\n    }\n    \n    return { regions, statuses };\n  }\n\n  if (loading) {\n    return <div className=\"loading\">Loading global status...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  const { regions, statuses } = getStatusCounts();\n\n  return (\n    <div className=\"global-view\">\n      <h1>Global Telephony Status</h1>\n      <p>Last updated: {new Date().toLocaleString()}</p>\n      \n      <div className=\"status-summary\">\n        <div \n          className={`status-card ${activeFilter === 'green' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('green')}\n        >\n          <h3>Online</h3>\n          <div className=\"status-count green\">{statuses.green}</div>\n          {activeFilter === 'green' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n        <div \n          className={`status-card ${activeFilter === 'yellow' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('yellow')}\n        >\n          <h3>Degraded</h3>\n          <div className=\"status-count yellow\">{statuses.yellow || 0}</div>\n          {activeFilter === 'yellow' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n        <div \n          className={`status-card ${activeFilter === 'red' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('red')}\n        >\n          <h3>Offline</h3>\n          <div className=\"status-count red\">{statuses.red}</div>\n          {activeFilter === 'red' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n      </div>\n      \n      {Object.keys(regions).length > 0 && (\n        <div className=\"region-summary\">\n          <h2>Status by Region</h2>\n          <div className=\"region-cards\">\n            {Object.entries(regions).map(([region, counts]) => (\n              <div \n                className={`region-card ${activeRegion === region ? 'active' : ''}`} \n                key={region}\n                onClick={() => handleRegionClick(region)}\n              >\n                <h3>{region}</h3>\n                <div className=\"region-stats\">\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Total:</span>\n                    <span className=\"stat-value\">{counts.total}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Online:</span>\n                    <span className=\"stat-value\">{counts.green}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Degraded:</span>\n                    <span className=\"stat-value\">{counts.yellow || 0}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Offline:</span>\n                    <span className=\"stat-value\">{counts.red}</span>\n                  </div>\n                </div>\n                {activeRegion === region && <div className=\"filter-badge\">Filtered</div>}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"countries-header\">\n        <div className=\"header-left\">\n          <h2>\n            {activeFilter || activeRegion ? (\n              <>\n                Countries \n                {activeFilter && ` - ${\n                  activeFilter === 'green' ? 'Online' : \n                  activeFilter === 'yellow' ? 'Degraded' : \n                  'Offline'\n                }`}\n                {activeRegion && ` - ${activeRegion}`}\n                {` (${filteredData.length})`}\n              </>\n            ) : (\n              `All Countries (${telemetryData.length || 0})`\n            )}\n          </h2>\n        </div>\n        \n        <div className=\"header-right\">\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search countries...\"\n              value={countrySearch}\n              onChange={(e) => setCountrySearch(e.target.value)}\n              className=\"search-input\"\n            />\n            {countrySearch && (\n              <button \n                className=\"clear-search-btn\"\n                onClick={() => setCountrySearch('')}\n              >\n                ×\n              </button>\n            )}\n          </div>\n          \n          {(activeFilter || activeRegion || countrySearch) && (\n            <button \n              className=\"clear-filter visible\"\n              onClick={clearAllFilters}\n            >\n              Clear All Filters\n            </button>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"table-container\">\n        <table className=\"telemetry-table\">\n          <thead>\n            <tr>\n              <th>Country</th>\n              <th>Region</th>\n              <th>Status</th>\n              <th>Last Test</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.length > 0 ? (\n              filteredData.map((country) => (\n                <tr key={country.id || country.country}>\n                  <td>{country.country}</td>\n                  <td>{country.region || 'N/A'}</td>\n                  <td>\n                    <StatusIndicator status={country.status} />\n                  </td>\n                  <td>{formatDate(country.last_updated || country.last_checked)}</td>\n                  <td>\n                    <Link to={`/country/${country.id || country.country}`} className=\"details-link\">\n                      View Details\n                    </Link>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"5\" style={{ textAlign: 'center', padding: '20px' }}>\n                  No countries match your filter criteria\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}