{"ast":null,"code":"import React,{useState,useEffect}from'react';import{historyApi}from'../services/api';import StatusIndicator from'../components/StatusIndicator';import'./GlobalHistoryView.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GlobalHistoryView=()=>{const[historyData,setHistoryData]=useState([]);const[filteredData,setFilteredData]=useState([]);const[activeFilter,setActiveFilter]=useState(null);const[showOngoingOnly,setShowOngoingOnly]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[viewMode,setViewMode]=useState('country');// 'country' or 'phone'\nconst[searchTerm,setSearchTerm]=useState('');// Added new filters\nconst[countryFilter,setCountryFilter]=useState('');const[typeFilter,setTypeFilter]=useState('');// Filter settings\nconst[timeRange,setTimeRange]=useState('5d');const[startDate,setStartDate]=useState('');const[endDate,setEndDate]=useState('');const[showCustomDates,setShowCustomDates]=useState(false);useEffect(()=>{fetchHistoryData();},[timeRange,viewMode]);// Apply filters when filter states change or historyData updates\nuseEffect(()=>{if(!historyData||!Array.isArray(historyData)){setFilteredData([]);return;}// First filter out the \"green\" (online) events as we're only interested in issues\nlet filtered=historyData.filter(item=>item.status!=='green');// Apply status filter if active\nif(activeFilter){filtered=filtered.filter(item=>item.status===activeFilter);}// Apply search filter if in phone mode\nif(viewMode==='phone'&&searchTerm){const term=searchTerm.toLowerCase();filtered=filtered.filter(item=>item.number&&item.number.toLowerCase().includes(term));}// Apply country filter if selected\nif(countryFilter){const search=countryFilter.toLowerCase();filtered=filtered.filter(item=>item.country&&item.country.toLowerCase().includes(search));}// Apply type filter if selected\nif(typeFilter){filtered=filtered.filter(item=>item.type===typeFilter);}// Apply ongoing filter if active\nif(showOngoingOnly){filtered=filtered.filter(item=>item.status_end===null);}setFilteredData(filtered);},[activeFilter,showOngoingOnly,historyData,viewMode,searchTerm,countryFilter,typeFilter]);const fetchHistoryData=async()=>{try{setLoading(true);let params={timeRange};if(timeRange==='custom'&&startDate&&endDate){params.startDate=startDate;params.endDate=endDate;}let response;if(viewMode==='country'){response=await historyApi.getStatusHistory(params.timeRange,params.startDate,params.endDate);}else{response=await historyApi.getPhoneHistory(params.timeRange,params.startDate,params.endDate,searchTerm||null);}// Check if response and response.data exist\nif(response&&response.data){// Handle wrapped response structure with a data property\nconst actualData=response.data.data||response.data;if(Array.isArray(actualData)){setHistoryData(actualData);// Log data for debugging\nconsole.log('Fetched history data:',actualData);console.log('Yellow items count:',actualData.filter(item=>item.status==='yellow').length);}else{console.error('Expected array but received:',typeof actualData);setHistoryData([]);setError('Invalid data format received from server');}}else{// Handle empty or malformed response\nconsole.warn('API returned empty or invalid data');setHistoryData([]);setError('No history data available. Please try again later.');}setLoading(false);}catch(err){setError('Failed to fetch history data. Please try again later.');setLoading(false);console.error('Error fetching history data:',err);// Initialize with empty array to prevent filter errors\nsetHistoryData([]);}};const handleFilterClick=status=>{if(activeFilter===status){// If clicking the same filter again, clear the filter\nsetActiveFilter(null);}else{setActiveFilter(status);}};const handleOngoingFilterClick=()=>{setShowOngoingOnly(!showOngoingOnly);// Don't reset status filter\n};const clearAllFilters=()=>{setActiveFilter(null);setShowOngoingOnly(false);setSearchTerm('');setCountryFilter('');setTypeFilter('');};// Get unique countries for filter dropdown\nconst getUniqueCountries=()=>{if(!historyData||!historyData.length)return[];const countries=new Set();historyData.forEach(item=>{if(item.country)countries.add(item.country);});return Array.from(countries).sort();};// Get unique types for filter dropdown\nconst getUniqueTypes=()=>{if(!historyData||!historyData.length)return[];const types=new Set();historyData.forEach(item=>{if(item.type)types.add(item.type);});return Array.from(types).sort();};// Get counts by status for issues only\nconst getStatusCounts=()=>{const counts={yellow:0,red:0,ongoing:0,total:0};if(!historyData||!Array.isArray(historyData)){return counts;}historyData.forEach(item=>{if(item.status==='yellow'||item.status==='red'){counts[item.status]=(counts[item.status]||0)+1;counts.total++;// Count ongoing issues\nif(item.status_end===null){counts.ongoing++;}}});return counts;};// Format date to readable format\nconst formatDate=dateString=>{if(!dateString)return'Present';const date=new Date(dateString);return date.toLocaleString();};// Calculate duration between start and end times\nconst calculateDuration=(startDate,endDate)=>{if(!endDate)return'Ongoing';const start=new Date(startDate);const end=new Date(endDate);const durationMs=end-start;// Less than a minute\nif(durationMs<60000){return`${Math.floor(durationMs/1000)} seconds`;}// Less than an hour\nif(durationMs<3600000){return`${Math.floor(durationMs/60000)} minutes`;}// Less than a day\nif(durationMs<86400000){return`${Math.floor(durationMs/3600000)} hours`;}// More than a day\nreturn`${Math.floor(durationMs/86400000)} days`;};const handleTimeRangeChange=e=>{const newRange=e.target.value;setTimeRange(newRange);setShowCustomDates(newRange==='custom');};const handleCustomDateSubmit=e=>{e.preventDefault();fetchHistoryData();};// Group history data by country or phone number\nconst groupData=function(){let data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:filteredData;const grouped={};if(!data||!Array.isArray(data)||data.length===0){return grouped;}if(viewMode==='country'){data.forEach(item=>{if(!item||!item.country)return;if(!grouped[item.country]){grouped[item.country]=[];}grouped[item.country].push(item);});}else{data.forEach(item=>{if(!item||!item.number)return;if(!grouped[item.number]){grouped[item.number]=[];}grouped[item.number].push(item);});}return grouped;};// Add a title that shows the current filter status\nconst getFilterTitle=()=>{let title=\"\";if(activeFilter){title+=`${activeFilter==='yellow'?'Degraded':'Offline'} `;}else{title+=\"All \";}title+=\"Issues\";if(showOngoingOnly){title+=\" (Ongoing Only)\";}if(countryFilter){title+=` in ${countryFilter}`;}if(typeFilter){title+=` of type ${typeFilter}`;}return title;};const handleViewModeChange=mode=>{setViewMode(mode);// Reset filters when changing view mode\nsetActiveFilter(null);setShowOngoingOnly(false);setSearchTerm('');setCountryFilter('');setTypeFilter('');};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading history data...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error});}const groupedData=groupData();return/*#__PURE__*/_jsxs(\"div\",{className:\"history-view\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Global Status History\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{className:`toggle-btn ${viewMode==='country'?'active':''}`,onClick:()=>handleViewModeChange('country'),children:\"View by Country\"}),/*#__PURE__*/_jsx(\"button\",{className:`toggle-btn ${viewMode==='phone'?'active':''}`,onClick:()=>handleViewModeChange('phone'),children:\"View by Phone Number\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-range-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"timeRange\",children:\"Time Range:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"timeRange\",value:timeRange,onChange:handleTimeRangeChange,className:\"time-range-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"24h\",children:\"Last 24 Hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"48h\",children:\"Last 48 Hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"5d\",children:\"Last 5 Days\"}),/*#__PURE__*/_jsx(\"option\",{value:\"custom\",children:\"Custom Range\"})]})]}),showCustomDates&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCustomDateSubmit,className:\"custom-date-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"startDate\",children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",id:\"startDate\",value:startDate,onChange:e=>setStartDate(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"endDate\",children:\"End Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",id:\"endDate\",value:endDate,onChange:e=>setEndDate(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"apply-btn\",children:\"Apply\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"advanced-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"countryFilter\",children:\"Country:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"countryFilter\",placeholder:\"Search for a country...\",value:countryFilter,onChange:e=>setCountryFilter(e.target.value),className:\"search-input\"}),countryFilter&&/*#__PURE__*/_jsx(\"button\",{className:\"clear-search-btn\",onClick:()=>setCountryFilter(''),children:\"\\xD7\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"typeFilter\",children:\"Type:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"typeFilter\",value:typeFilter,onChange:e=>setTypeFilter(e.target.value),className:\"filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Types\"}),getUniqueTypes().map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type},type))]})]})]}),viewMode==='phone'&&/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search phone numbers...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"search-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchHistoryData,className:\"search-btn\",disabled:!searchTerm,children:\"Search\"})]}),(countryFilter||typeFilter||activeFilter||showOngoingOnly||searchTerm)&&/*#__PURE__*/_jsx(\"button\",{className:\"clear-filter-btn visible\",onClick:clearAllFilters,children:\"Clear All Filters\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"history-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`summary-card ${activeFilter==='red'?'active':''}`,onClick:()=>handleFilterClick('red'),children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Offline Issues\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-count red\",children:getStatusCounts().red}),activeFilter==='red'&&/*#__PURE__*/_jsx(\"div\",{className:\"filter-badge\",children:\"Filtered\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`summary-card ${activeFilter==='yellow'?'active':''}`,onClick:()=>handleFilterClick('yellow'),children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Degraded Issues\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-count yellow\",children:getStatusCounts().yellow||0}),activeFilter==='yellow'&&/*#__PURE__*/_jsx(\"div\",{className:\"filter-badge\",children:\"Filtered\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`summary-card ${!activeFilter&&!showOngoingOnly?'active':''}`,onClick:clearAllFilters,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Issues\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-count blue\",children:getStatusCounts().total}),!activeFilter&&!showOngoingOnly&&!countryFilter&&!typeFilter&&/*#__PURE__*/_jsx(\"div\",{className:\"filter-badge\",children:\"Showing All\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`summary-card ${showOngoingOnly?'active':''}`,onClick:handleOngoingFilterClick,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ongoing Issues\"}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-count purple\",children:getStatusCounts().ongoing}),showOngoingOnly&&/*#__PURE__*/_jsx(\"div\",{className:\"filter-badge\",children:\"Filtered\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Issues Shown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:filteredData.length}),/*#__PURE__*/_jsx(\"div\",{className:\"info-detail\",children:activeFilter?`${activeFilter==='yellow'?'Degraded':'Offline'} incidents`:showOngoingOnly?'Ongoing incidents':'All incidents'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:viewMode==='country'?'Countries':'Phone Numbers'}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:Object.keys(groupedData).length}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-detail\",children:[countryFilter?`In ${countryFilter}`:'All regions',typeFilter?`, type: ${typeFilter}`:'']})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"history-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[viewMode==='country'?'Countries':'Phone Numbers',\" - \",getFilterTitle()]}),(activeFilter||showOngoingOnly||searchTerm||countryFilter||typeFilter)&&/*#__PURE__*/_jsx(\"button\",{className:\"clear-filter visible\",onClick:clearAllFilters,children:\"Clear All Filters\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"history-list\",children:[Object.entries(groupedData).map(_ref=>{let[key,events]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:viewMode==='country'?\"country-history-card\":\"phone-history-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:key}),/*#__PURE__*/_jsxs(\"table\",{className:\"history-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Started\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ended\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Duration\"}),viewMode==='phone'&&/*#__PURE__*/_jsx(\"th\",{children:\"Country\"}),viewMode==='phone'&&/*#__PURE__*/_jsx(\"th\",{children:\"Type\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:events.map(event=>/*#__PURE__*/_jsxs(\"tr\",{className:`status-${event.status}`,children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(StatusIndicator,{status:event.status})}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(event.status_start)}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(event.status_end)}),/*#__PURE__*/_jsx(\"td\",{children:calculateDuration(event.status_start,event.status_end)}),viewMode==='phone'&&/*#__PURE__*/_jsx(\"td\",{children:event.country}),viewMode==='phone'&&/*#__PURE__*/_jsx(\"td\",{children:event.type||'N/A'})]},event.id))})]})]},key);}),Object.keys(groupedData).length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-results\",children:[\"No \",viewMode==='country'?'countries':'phone numbers',\" match the current filters.\",/*#__PURE__*/_jsx(\"button\",{onClick:clearAllFilters,className:\"clear-link\",children:\"Clear filters\"})]})]})]});};export default GlobalHistoryView;","map":{"version":3,"names":["React","useState","useEffect","historyApi","StatusIndicator","jsx","_jsx","jsxs","_jsxs","GlobalHistoryView","historyData","setHistoryData","filteredData","setFilteredData","activeFilter","setActiveFilter","showOngoingOnly","setShowOngoingOnly","loading","setLoading","error","setError","viewMode","setViewMode","searchTerm","setSearchTerm","countryFilter","setCountryFilter","typeFilter","setTypeFilter","timeRange","setTimeRange","startDate","setStartDate","endDate","setEndDate","showCustomDates","setShowCustomDates","fetchHistoryData","Array","isArray","filtered","filter","item","status","term","toLowerCase","number","includes","search","country","type","status_end","params","response","getStatusHistory","getPhoneHistory","data","actualData","console","log","length","warn","err","handleFilterClick","handleOngoingFilterClick","clearAllFilters","getUniqueCountries","countries","Set","forEach","add","from","sort","getUniqueTypes","types","getStatusCounts","counts","yellow","red","ongoing","total","formatDate","dateString","date","Date","toLocaleString","calculateDuration","start","end","durationMs","Math","floor","handleTimeRangeChange","e","newRange","target","value","handleCustomDateSubmit","preventDefault","groupData","arguments","undefined","grouped","push","getFilterTitle","title","handleViewModeChange","mode","className","children","groupedData","onClick","htmlFor","id","onChange","onSubmit","required","placeholder","map","disabled","Object","keys","entries","_ref","key","events","event","status_start"],"sources":["/Users/ben/Downloads/gitTemp/tm_react/client/src/views/GlobalHistoryView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { historyApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalHistoryView.css';\n\nconst GlobalHistoryView = () => {\n  const [historyData, setHistoryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [showOngoingOnly, setShowOngoingOnly] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('country');  // 'country' or 'phone'\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // Added new filters\n  const [countryFilter, setCountryFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  \n  // Filter settings\n  const [timeRange, setTimeRange] = useState('5d');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [showCustomDates, setShowCustomDates] = useState(false);\n\n  useEffect(() => {\n    fetchHistoryData();\n  }, [timeRange, viewMode]);\n\n  // Apply filters when filter states change or historyData updates\n  useEffect(() => {\n    if (!historyData || !Array.isArray(historyData)) {\n      setFilteredData([]);\n      return;\n    }\n    \n    // First filter out the \"green\" (online) events as we're only interested in issues\n    let filtered = historyData.filter(item => item.status !== 'green');\n    \n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n    \n    // Apply search filter if in phone mode\n    if (viewMode === 'phone' && searchTerm) {\n      const term = searchTerm.toLowerCase();\n      filtered = filtered.filter(item => \n        item.number && item.number.toLowerCase().includes(term)\n      );\n    }\n    \n    // Apply country filter if selected\n    if (countryFilter) {\n      const search = countryFilter.toLowerCase();\n      filtered = filtered.filter(item => \n        item.country && item.country.toLowerCase().includes(search)\n      );\n    }\n    \n    // Apply type filter if selected\n    if (typeFilter) {\n      filtered = filtered.filter(item => item.type === typeFilter);\n    }\n    \n    // Apply ongoing filter if active\n    if (showOngoingOnly) {\n      filtered = filtered.filter(item => item.status_end === null);\n    }\n    \n    setFilteredData(filtered);\n  }, [activeFilter, showOngoingOnly, historyData, viewMode, searchTerm, countryFilter, typeFilter]);\n\n  const fetchHistoryData = async () => {\n    try {\n      setLoading(true);\n      \n      let params = { timeRange };\n      if (timeRange === 'custom' && startDate && endDate) {\n        params.startDate = startDate;\n        params.endDate = endDate;\n      }\n      \n      let response;\n      \n      if (viewMode === 'country') {\n        response = await historyApi.getStatusHistory(\n          params.timeRange,\n          params.startDate,\n          params.endDate\n        );\n      } else {\n        response = await historyApi.getPhoneHistory(\n          params.timeRange,\n          params.startDate,\n          params.endDate,\n          searchTerm || null\n        );\n      }\n      \n      // Check if response and response.data exist\n      if (response && response.data) {\n        // Handle wrapped response structure with a data property\n        const actualData = response.data.data || response.data;\n        \n        if (Array.isArray(actualData)) {\n          setHistoryData(actualData);\n          \n          // Log data for debugging\n          console.log('Fetched history data:', actualData);\n          console.log('Yellow items count:', actualData.filter(item => item.status === 'yellow').length);\n        } else {\n          console.error('Expected array but received:', typeof actualData);\n          setHistoryData([]);\n          setError('Invalid data format received from server');\n        }\n      } else {\n        // Handle empty or malformed response\n        console.warn('API returned empty or invalid data');\n        setHistoryData([]);\n        setError('No history data available. Please try again later.');\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch history data. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching history data:', err);\n      // Initialize with empty array to prevent filter errors\n      setHistoryData([]);\n    }\n  };\n\n  const handleFilterClick = (status) => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n  \n  const handleOngoingFilterClick = () => {\n    setShowOngoingOnly(!showOngoingOnly);\n    // Don't reset status filter\n  };\n  \n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setShowOngoingOnly(false);\n    setSearchTerm('');\n    setCountryFilter('');\n    setTypeFilter('');\n  };\n  \n  // Get unique countries for filter dropdown\n  const getUniqueCountries = () => {\n    if (!historyData || !historyData.length) return [];\n    \n    const countries = new Set();\n    historyData.forEach(item => {\n      if (item.country) countries.add(item.country);\n    });\n    \n    return Array.from(countries).sort();\n  };\n  \n  // Get unique types for filter dropdown\n  const getUniqueTypes = () => {\n    if (!historyData || !historyData.length) return [];\n    \n    const types = new Set();\n    historyData.forEach(item => {\n      if (item.type) types.add(item.type);\n    });\n    \n    return Array.from(types).sort();\n  };\n  \n  // Get counts by status for issues only\n  const getStatusCounts = () => {\n    const counts = {\n      yellow: 0,\n      red: 0,\n      ongoing: 0,\n      total: 0\n    };\n    \n    if (!historyData || !Array.isArray(historyData)) {\n      return counts;\n    }\n    \n    historyData.forEach(item => {\n      if (item.status === 'yellow' || item.status === 'red') {\n        counts[item.status] = (counts[item.status] || 0) + 1;\n        counts.total++;\n        \n        // Count ongoing issues\n        if (item.status_end === null) {\n          counts.ongoing++;\n        }\n      }\n    });\n    \n    return counts;\n  };\n\n  // Format date to readable format\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Present';\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Calculate duration between start and end times\n  const calculateDuration = (startDate, endDate) => {\n    if (!endDate) return 'Ongoing';\n    \n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const durationMs = end - start;\n    \n    // Less than a minute\n    if (durationMs < 60000) {\n      return `${Math.floor(durationMs / 1000)} seconds`;\n    }\n    // Less than an hour\n    if (durationMs < 3600000) {\n      return `${Math.floor(durationMs / 60000)} minutes`;\n    }\n    // Less than a day\n    if (durationMs < 86400000) {\n      return `${Math.floor(durationMs / 3600000)} hours`;\n    }\n    // More than a day\n    return `${Math.floor(durationMs / 86400000)} days`;\n  };\n\n  const handleTimeRangeChange = (e) => {\n    const newRange = e.target.value;\n    setTimeRange(newRange);\n    setShowCustomDates(newRange === 'custom');\n  };\n\n  const handleCustomDateSubmit = (e) => {\n    e.preventDefault();\n    fetchHistoryData();\n  };\n\n  // Group history data by country or phone number\n  const groupData = (data = filteredData) => {\n    const grouped = {};\n    \n    if (!data || !Array.isArray(data) || data.length === 0) {\n      return grouped;\n    }\n    \n    if (viewMode === 'country') {\n      data.forEach(item => {\n        if (!item || !item.country) return;\n        \n        if (!grouped[item.country]) {\n          grouped[item.country] = [];\n        }\n        grouped[item.country].push(item);\n      });\n    } else {\n      data.forEach(item => {\n        if (!item || !item.number) return;\n        \n        if (!grouped[item.number]) {\n          grouped[item.number] = [];\n        }\n        grouped[item.number].push(item);\n      });\n    }\n    \n    return grouped;\n  };\n\n  // Add a title that shows the current filter status\n  const getFilterTitle = () => {\n    let title = \"\";\n    \n    if (activeFilter) {\n      title += `${activeFilter === 'yellow' ? 'Degraded' : 'Offline'} `;\n    } else {\n      title += \"All \";\n    }\n    \n    title += \"Issues\";\n    \n    if (showOngoingOnly) {\n      title += \" (Ongoing Only)\";\n    }\n    \n    if (countryFilter) {\n      title += ` in ${countryFilter}`;\n    }\n    \n    if (typeFilter) {\n      title += ` of type ${typeFilter}`;\n    }\n    \n    return title;\n  };\n\n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n    // Reset filters when changing view mode\n    setActiveFilter(null);\n    setShowOngoingOnly(false);\n    setSearchTerm('');\n    setCountryFilter('');\n    setTypeFilter('');\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading history data...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  const groupedData = groupData();\n  \n  return (\n    <div className=\"history-view\">\n      <h1>Global Status History</h1>\n      \n      <div className=\"view-mode-toggle\">\n        <button \n          className={`toggle-btn ${viewMode === 'country' ? 'active' : ''}`}\n          onClick={() => handleViewModeChange('country')}\n        >\n          View by Country\n        </button>\n        <button \n          className={`toggle-btn ${viewMode === 'phone' ? 'active' : ''}`}\n          onClick={() => handleViewModeChange('phone')}\n        >\n          View by Phone Number\n        </button>\n      </div>\n      \n      <div className=\"filter-controls\">\n        <div className=\"time-range-selector\">\n          <label htmlFor=\"timeRange\">Time Range:</label>\n          <select \n            id=\"timeRange\" \n            value={timeRange} \n            onChange={handleTimeRangeChange}\n            className=\"time-range-select\"\n          >\n            <option value=\"24h\">Last 24 Hours</option>\n            <option value=\"48h\">Last 48 Hours</option>\n            <option value=\"5d\">Last 5 Days</option>\n            <option value=\"custom\">Custom Range</option>\n          </select>\n        </div>\n        \n        {showCustomDates && (\n          <form onSubmit={handleCustomDateSubmit} className=\"custom-date-form\">\n            <div className=\"date-input-group\">\n              <label htmlFor=\"startDate\">Start Date:</label>\n              <input \n                type=\"datetime-local\" \n                id=\"startDate\" \n                value={startDate} \n                onChange={(e) => setStartDate(e.target.value)}\n                required\n              />\n            </div>\n            \n            <div className=\"date-input-group\">\n              <label htmlFor=\"endDate\">End Date:</label>\n              <input \n                type=\"datetime-local\" \n                id=\"endDate\" \n                value={endDate} \n                onChange={(e) => setEndDate(e.target.value)}\n                required\n              />\n            </div>\n            \n            <button type=\"submit\" className=\"apply-btn\">Apply</button>\n          </form>\n        )}\n        \n        <div className=\"advanced-filters\">\n          <div className=\"filter-group\">\n            <label htmlFor=\"countryFilter\">Country:</label>\n            <div className=\"search-field\">\n              <input\n                type=\"text\"\n                id=\"countryFilter\"\n                placeholder=\"Search for a country...\"\n                value={countryFilter}\n                onChange={(e) => setCountryFilter(e.target.value)}\n                className=\"search-input\"\n              />\n              {countryFilter && (\n                <button \n                  className=\"clear-search-btn\"\n                  onClick={() => setCountryFilter('')}\n                >\n                  ×\n                </button>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"filter-group\">\n            <label htmlFor=\"typeFilter\">Type:</label>\n            <select\n              id=\"typeFilter\"\n              value={typeFilter}\n              onChange={(e) => setTypeFilter(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">All Types</option>\n              {getUniqueTypes().map(type => (\n                <option key={type} value={type}>{type}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {viewMode === 'phone' && (\n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search phone numbers...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n            <button \n              onClick={fetchHistoryData} \n              className=\"search-btn\"\n              disabled={!searchTerm}\n            >\n              Search\n            </button>\n          </div>\n        )}\n        \n        {(countryFilter || typeFilter || activeFilter || showOngoingOnly || searchTerm) && (\n          <button\n            className=\"clear-filter-btn visible\"\n            onClick={clearAllFilters}\n          >\n            Clear All Filters\n          </button>\n        )}\n      </div>\n      \n      <div className=\"history-summary\">\n        <div className=\"summary-cards\">\n          <div \n            className={`summary-card ${activeFilter === 'red' ? 'active' : ''}`}\n            onClick={() => handleFilterClick('red')}\n          >\n            <h3>Offline Issues</h3>\n            <div className=\"summary-count red\">{getStatusCounts().red}</div>\n            {activeFilter === 'red' && <div className=\"filter-badge\">Filtered</div>}\n          </div>\n          \n          <div \n            className={`summary-card ${activeFilter === 'yellow' ? 'active' : ''}`}\n            onClick={() => handleFilterClick('yellow')}\n          >\n            <h3>Degraded Issues</h3>\n            <div className=\"summary-count yellow\">{getStatusCounts().yellow || 0}</div>\n            {activeFilter === 'yellow' && <div className=\"filter-badge\">Filtered</div>}\n          </div>\n        </div>\n        \n        <div className=\"summary-cards\">\n          <div \n            className={`summary-card ${!activeFilter && !showOngoingOnly ? 'active' : ''}`}\n            onClick={clearAllFilters}\n          >\n            <h3>Total Issues</h3>\n            <div className=\"summary-count blue\">{getStatusCounts().total}</div>\n            {!activeFilter && !showOngoingOnly && !countryFilter && !typeFilter && <div className=\"filter-badge\">Showing All</div>}\n          </div>\n          \n          <div \n            className={`summary-card ${showOngoingOnly ? 'active' : ''}`}\n            onClick={handleOngoingFilterClick}\n          >\n            <h3>Ongoing Issues</h3>\n            <div className=\"summary-count purple\">{getStatusCounts().ongoing}</div>\n            {showOngoingOnly && <div className=\"filter-badge\">Filtered</div>}\n          </div>\n        </div>\n        \n        <div className=\"summary-info\">\n          <div className=\"info-card\">\n            <h3>Issues Shown</h3>\n            <div className=\"info-value\">{filteredData.length}</div>\n            <div className=\"info-detail\">\n              {activeFilter \n                ? `${activeFilter === 'yellow' ? 'Degraded' : 'Offline'} incidents` \n                : (showOngoingOnly ? 'Ongoing incidents' : 'All incidents')}\n            </div>\n          </div>\n          <div className=\"info-card\">\n            <h3>{viewMode === 'country' ? 'Countries' : 'Phone Numbers'}</h3>\n            <div className=\"info-value\">{Object.keys(groupedData).length}</div>\n            <div className=\"info-detail\">\n              {countryFilter ? `In ${countryFilter}` : 'All regions'}\n              {typeFilter ? `, type: ${typeFilter}` : ''}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"history-header\">\n        <h2>{viewMode === 'country' ? 'Countries' : 'Phone Numbers'} - {getFilterTitle()}</h2>\n        {(activeFilter || showOngoingOnly || searchTerm || countryFilter || typeFilter) && (\n          <button \n            className=\"clear-filter visible\"\n            onClick={clearAllFilters}\n          >\n            Clear All Filters\n          </button>\n        )}\n      </div>\n      \n      <div className=\"history-list\">\n        {Object.entries(groupedData).map(([key, events]) => (\n          <div key={key} className={viewMode === 'country' ? \"country-history-card\" : \"phone-history-card\"}>\n            <h2>{key}</h2>\n            <table className=\"history-table\">\n              <thead>\n                <tr>\n                  <th>Status</th>\n                  <th>Started</th>\n                  <th>Ended</th>\n                  <th>Duration</th>\n                  {viewMode === 'phone' && <th>Country</th>}\n                  {viewMode === 'phone' && <th>Type</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {events.map((event) => (\n                  <tr key={event.id} className={`status-${event.status}`}>\n                    <td>\n                      <StatusIndicator status={event.status} />\n                    </td>\n                    <td>{formatDate(event.status_start)}</td>\n                    <td>{formatDate(event.status_end)}</td>\n                    <td>{calculateDuration(event.status_start, event.status_end)}</td>\n                    {viewMode === 'phone' && <td>{event.country}</td>}\n                    {viewMode === 'phone' && <td>{event.type || 'N/A'}</td>}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n        \n        {Object.keys(groupedData).length === 0 && (\n          <div className=\"no-results\">\n            No {viewMode === 'country' ? 'countries' : 'phone numbers'} match the current filters.\n            <button onClick={clearAllFilters} className=\"clear-link\">Clear filters</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalHistoryView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}