{"ast":null,"code":"var _jsxFileName = \"/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/GlobalView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalView.css';\nconst GlobalView = () => {\n  const [telemetryData, setTelemetryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [activeRegion, setActiveRegion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getGlobalStatus();\n        setTelemetryData(response.data);\n        setFilteredData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch telemetry data. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching telemetry data:', err);\n      }\n    };\n    fetchData();\n\n    // Set up polling every 5 minutes\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Apply filters when activeFilter or activeRegion changes or telemetryData updates\n  useEffect(() => {\n    let filtered = [...telemetryData];\n\n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n\n    // Apply region filter if active\n    if (activeRegion) {\n      filtered = filtered.filter(item => item.region === activeRegion);\n    }\n    setFilteredData(filtered);\n  }, [activeFilter, activeRegion, telemetryData]);\n\n  // Handle status filter click\n  const handleFilterClick = status => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n\n  // Handle region filter click\n  const handleRegionClick = region => {\n    if (activeRegion === region) {\n      // If clicking the same region again, clear the filter\n      setActiveRegion(null);\n    } else {\n      setActiveRegion(region);\n    }\n  };\n\n  // Clear all filters\n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setActiveRegion(null);\n  };\n\n  // Format date to readable format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Get counts by region and status\n  const getStatusCounts = () => {\n    const regions = {};\n    const statuses = {\n      green: 0,\n      yellow: 0,\n      red: 0\n    };\n    telemetryData.forEach(item => {\n      // Count by region\n      if (!regions[item.region]) {\n        regions[item.region] = {\n          total: 0,\n          green: 0,\n          yellow: 0,\n          red: 0\n        };\n      }\n      regions[item.region].total += 1;\n      regions[item.region][item.status] = (regions[item.region][item.status] || 0) + 1;\n\n      // Count by status\n      statuses[item.status] = (statuses[item.status] || 0) + 1;\n    });\n    return {\n      regions,\n      statuses\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }\n    }, \"Loading telemetry data...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 12\n      }\n    }, error);\n  }\n  const {\n    regions,\n    statuses\n  } = getStatusCounts();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Global Telephony Status\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Last updated: \", new Date().toLocaleString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `status-card ${activeFilter === 'green' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('green'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Online\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-count green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, statuses.green), activeFilter === 'green' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 40\n    }\n  }, \"Filtered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `status-card ${activeFilter === 'yellow' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('yellow'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Degraded\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-count yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, statuses.yellow || 0), activeFilter === 'yellow' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 41\n    }\n  }, \"Filtered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `status-card ${activeFilter === 'red' ? 'active' : ''}`,\n    onClick: () => handleFilterClick('red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Offline\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status-count red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, statuses.red), activeFilter === 'red' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 38\n    }\n  }, \"Filtered\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"region-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Status by Region\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"region-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, Object.entries(regions).map(([region, counts]) => /*#__PURE__*/React.createElement(\"div\", {\n    className: `region-card ${activeRegion === region ? 'active' : ''}`,\n    key: region,\n    onClick: () => handleRegionClick(region),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, region), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"region-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"Total:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, counts.total)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Online:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, counts.green)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"Degraded:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, counts.yellow || 0)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, \"Offline:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, counts.red))), activeRegion === region && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 43\n    }\n  }, \"Filtered\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"countries-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, activeFilter || activeRegion ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Countries\", activeFilter && ` - ${activeFilter === 'green' ? 'Online' : activeFilter === 'yellow' ? 'Degraded' : 'Offline'}`, activeRegion && ` - ${activeRegion}`, ` (${filteredData.length})`) : `All Countries (${telemetryData.length})`), (activeFilter || activeRegion) && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-filter visible\",\n    onClick: clearAllFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Clear All Filters\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"telemetry-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"Region\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Last Test\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, filteredData.map(country => /*#__PURE__*/React.createElement(\"tr\", {\n    key: country.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, country.country), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, country.region), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StatusIndicator, {\n    status: country.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, formatDate(country.last_updated)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/country/${country.id}`,\n    className: \"details-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, \"View Details\"))))))));\n};\nexport default GlobalView;","map":{"version":3,"names":["React","useState","useEffect","Link","telemetryApi","StatusIndicator","GlobalView","telemetryData","setTelemetryData","filteredData","setFilteredData","activeFilter","setActiveFilter","activeRegion","setActiveRegion","loading","setLoading","error","setError","fetchData","response","getGlobalStatus","data","err","console","intervalId","setInterval","clearInterval","filtered","filter","item","status","region","handleFilterClick","handleRegionClick","clearAllFilters","formatDate","dateString","date","Date","toLocaleString","getStatusCounts","regions","statuses","green","yellow","red","forEach","total","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","counts","key","Fragment","length","country","id","last_updated","to"],"sources":["/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/GlobalView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './GlobalView.css';\n\nconst GlobalView = () => {\n  const [telemetryData, setTelemetryData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [activeFilter, setActiveFilter] = useState(null);\n  const [activeRegion, setActiveRegion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getGlobalStatus();\n        setTelemetryData(response.data);\n        setFilteredData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch telemetry data. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching telemetry data:', err);\n      }\n    };\n\n    fetchData();\n\n    // Set up polling every 5 minutes\n    const intervalId = setInterval(fetchData, 5 * 60 * 1000);\n    \n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  \n  // Apply filters when activeFilter or activeRegion changes or telemetryData updates\n  useEffect(() => {\n    let filtered = [...telemetryData];\n    \n    // Apply status filter if active\n    if (activeFilter) {\n      filtered = filtered.filter(item => item.status === activeFilter);\n    }\n    \n    // Apply region filter if active\n    if (activeRegion) {\n      filtered = filtered.filter(item => item.region === activeRegion);\n    }\n    \n    setFilteredData(filtered);\n  }, [activeFilter, activeRegion, telemetryData]);\n  \n  // Handle status filter click\n  const handleFilterClick = (status) => {\n    if (activeFilter === status) {\n      // If clicking the same filter again, clear the filter\n      setActiveFilter(null);\n    } else {\n      setActiveFilter(status);\n    }\n  };\n  \n  // Handle region filter click\n  const handleRegionClick = (region) => {\n    if (activeRegion === region) {\n      // If clicking the same region again, clear the filter\n      setActiveRegion(null);\n    } else {\n      setActiveRegion(region);\n    }\n  };\n  \n  // Clear all filters\n  const clearAllFilters = () => {\n    setActiveFilter(null);\n    setActiveRegion(null);\n  };\n\n  // Format date to readable format\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Get counts by region and status\n  const getStatusCounts = () => {\n    const regions = {};\n    const statuses = {\n      green: 0,\n      yellow: 0,\n      red: 0\n    };\n    \n    telemetryData.forEach(item => {\n      // Count by region\n      if (!regions[item.region]) {\n        regions[item.region] = {\n          total: 0,\n          green: 0,\n          yellow: 0,\n          red: 0\n        };\n      }\n      \n      regions[item.region].total += 1;\n      regions[item.region][item.status] = (regions[item.region][item.status] || 0) + 1;\n      \n      // Count by status\n      statuses[item.status] = (statuses[item.status] || 0) + 1;\n    });\n    \n    return { regions, statuses };\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading telemetry data...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n\n  const { regions, statuses } = getStatusCounts();\n\n  return (\n    <div className=\"global-view\">\n      <h1>Global Telephony Status</h1>\n      <p>Last updated: {new Date().toLocaleString()}</p>\n      \n      <div className=\"status-summary\">\n        <div \n          className={`status-card ${activeFilter === 'green' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('green')}\n        >\n          <h3>Online</h3>\n          <div className=\"status-count green\">{statuses.green}</div>\n          {activeFilter === 'green' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n        <div \n          className={`status-card ${activeFilter === 'yellow' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('yellow')}\n        >\n          <h3>Degraded</h3>\n          <div className=\"status-count yellow\">{statuses.yellow || 0}</div>\n          {activeFilter === 'yellow' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n        <div \n          className={`status-card ${activeFilter === 'red' ? 'active' : ''}`}\n          onClick={() => handleFilterClick('red')}\n        >\n          <h3>Offline</h3>\n          <div className=\"status-count red\">{statuses.red}</div>\n          {activeFilter === 'red' && <div className=\"filter-badge\">Filtered</div>}\n        </div>\n      </div>\n      \n      <div className=\"region-summary\">\n        <h2>Status by Region</h2>\n        <div className=\"region-cards\">\n          {Object.entries(regions).map(([region, counts]) => (\n            <div \n              className={`region-card ${activeRegion === region ? 'active' : ''}`} \n              key={region}\n              onClick={() => handleRegionClick(region)}\n            >\n              <h3>{region}</h3>\n              <div className=\"region-stats\">\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Total:</span>\n                  <span className=\"stat-value\">{counts.total}</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Online:</span>\n                  <span className=\"stat-value\">{counts.green}</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Degraded:</span>\n                  <span className=\"stat-value\">{counts.yellow || 0}</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Offline:</span>\n                  <span className=\"stat-value\">{counts.red}</span>\n                </div>\n              </div>\n              {activeRegion === region && <div className=\"filter-badge\">Filtered</div>}\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"countries-header\">\n        <h2>\n          {activeFilter || activeRegion ? (\n            <>\n              Countries \n              {activeFilter && ` - ${\n                activeFilter === 'green' ? 'Online' : \n                activeFilter === 'yellow' ? 'Degraded' : \n                'Offline'\n              }`}\n              {activeRegion && ` - ${activeRegion}`}\n              {` (${filteredData.length})`}\n            </>\n          ) : (\n            `All Countries (${telemetryData.length})`\n          )}\n        </h2>\n        {(activeFilter || activeRegion) && (\n          <button \n            className=\"clear-filter visible\"\n            onClick={clearAllFilters}\n          >\n            Clear All Filters\n          </button>\n        )}\n      </div>\n      <div className=\"table-container\">\n        <table className=\"telemetry-table\">\n          <thead>\n            <tr>\n              <th>Country</th>\n              <th>Region</th>\n              <th>Status</th>\n              <th>Last Test</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.map((country) => (\n              <tr key={country.id}>\n                <td>{country.country}</td>\n                <td>{country.region}</td>\n                <td>\n                  <StatusIndicator status={country.status} />\n                </td>\n                <td>{formatDate(country.last_updated)}</td>\n                <td>\n                  <Link to={`/country/${country.id}`} className=\"details-link\">\n                    View Details\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}