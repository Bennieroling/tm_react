{"ast":null,"code":"var _jsxFileName = \"/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/CountryView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './CountryView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryView = () => {\n  _s();\n  const {\n    countryId\n  } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getCountryStatus(countryId);\n        setCountryData(response.data);\n        setLoading(false);\n      } catch (err) {\n        var _err$response;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404 ? `No data found for country ID ${countryId}` : 'Failed to fetch country data. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching country data:', err);\n      }\n    };\n    fetchData();\n\n    // Set up polling every 1 minute\n    const intervalId = setInterval(fetchData, 60 * 1000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [countryId]);\n\n  // Format date to readable format\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading country data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-link\",\n        children: \"Back to Global View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-view\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Global View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [countryData.country, \" Telephony Status\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: countryData.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Region:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: countryData.region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: formatDate(countryData.last_updated)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), countryData.provider && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Provider:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: countryData.provider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), countryData.type && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: countryData.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryView, \"kWSR7ZPEWfPFODtyYHYzaFWGck4=\", false, function () {\n  return [useParams];\n});\n_c = CountryView;\nexport default CountryView;\nvar _c;\n$RefreshReg$(_c, \"CountryView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","telemetryApi","StatusIndicator","jsxDEV","_jsxDEV","CountryView","_s","countryId","countryData","setCountryData","loading","setLoading","error","setError","fetchData","response","getCountryStatus","data","err","_err$response","status","console","intervalId","setInterval","clearInterval","formatDate","dateString","date","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","country","region","last_updated","provider","type","_c","$RefreshReg$"],"sources":["/Users/benvandijk/Downloads/monitoring/TM/telephony-monitor/client/src/views/CountryView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { telemetryApi } from '../services/api';\nimport StatusIndicator from '../components/StatusIndicator';\nimport './CountryView.css';\n\nconst CountryView = () => {\n  const { countryId } = useParams();\n  const [countryData, setCountryData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await telemetryApi.getCountryStatus(countryId);\n        setCountryData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(\n          err.response?.status === 404\n            ? `No data found for country ID ${countryId}`\n            : 'Failed to fetch country data. Please try again later.'\n        );\n        setLoading(false);\n        console.error('Error fetching country data:', err);\n      }\n    };\n\n    fetchData();\n\n    // Set up polling every 1 minute\n    const intervalId = setInterval(fetchData, 60 * 1000);\n    \n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [countryId]);\n\n  // Format date to readable format\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading country data...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <div className=\"error\">{error}</div>\n        <Link to=\"/\" className=\"back-link\">Back to Global View</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"country-view\">\n      <div className=\"country-header\">\n        <Link to=\"/\" className=\"back-link\">\n          &larr; Back to Global View\n        </Link>\n        <h1>{countryData.country} Telephony Status</h1>\n        <div className=\"country-summary\">\n          <div className=\"summary-item\">\n            <span className=\"label\">Status:</span>\n            <StatusIndicator status={countryData.status} />\n          </div>\n          <div className=\"summary-item\">\n            <span className=\"label\">Region:</span>\n            <span className=\"value\">{countryData.region}</span>\n          </div>\n          <div className=\"summary-item\">\n            <span className=\"label\">Last Updated:</span>\n            <span className=\"value\">{formatDate(countryData.last_updated)}</span>\n          </div>\n          {countryData.provider && (\n            <div className=\"summary-item\">\n              <span className=\"label\">Provider:</span>\n              <span className=\"value\">{countryData.provider}</span>\n            </div>\n          )}\n          {countryData.type && (\n            <div className=\"summary-item\">\n              <span className=\"label\">Type:</span>\n              <span className=\"value\">{countryData.type}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}